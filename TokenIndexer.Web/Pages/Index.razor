@page "/"
@page "/{walletId}"
<PageTitle>Insights</PageTitle>
@using TokenIndexer.Domain.Helpers
@using TokenIndexer.Web.ViewModels.Wallet
@using TokenIndexer.Domain.Entities
@using TokenIndexer.Domain.Extensions
@using TokenIndexer.Web.Entities
@inject DialogService DialogService
@inject NavigationManager NavManager

<PageTitle>Insights</PageTitle>
@{
    if (string.IsNullOrEmpty(WalletId))
    {
        <div class="row pt-5 px-5">
            <div class="col col-6">
                <RadzenCard Style="margin-bottom: 20px">
                    <div class="row">
                        <div class="col col-4">
                            <RadzenIcon Icon="account_balance_wallet" Style="width: 64px; height: 64px; font-size: 48px; color: var(--rz-primary-light)"></RadzenIcon>
                        </div>
                        <div class="col col-8">
                            <RadzenHeading Text="Wallets" Size="H4" Style="text-align: right; margin: 0px; color: #000000"></RadzenHeading>
                            <RadzenHeading Text="Tracked" Size="H4" Style="text-align: right; margin: 0px; font-size: 12px; color: #000000" class="text-muted"></RadzenHeading>
                            <RadzenHeading Text="@totalWalletCount" Size="H4" Style="text-align: right; font-size: 12px; margin: 0px; color: var(--rz-primary-light); margin-top: 15px"></RadzenHeading>
                        </div>
                    </div>
                </RadzenCard>
            </div>
            <div class="col col-6">
                <RadzenCard Style="margin-bottom: 20px">
                    <div class="row">
                        <div class="col col-4">
                            <RadzenIcon Icon="schedule" Style="width: 64px; height: 64px; font-size: 48px; color: var(--rz-secondary-light)"></RadzenIcon>
                        </div>
                        <div class="col col-8">
                            <RadzenHeading Text="Snapshot" Size="H4" Style="text-align: right; margin: 0px; color: #000000"></RadzenHeading>
                            <RadzenHeading Text="Latest" Size="H4" Style="text-align: right; margin: 0px; font-size: 12px; color: #000000" class="text-muted"></RadzenHeading>
                            <RadzenHeading Text="@latestSnapshot" Size="H4" Style="text-align: right; font-size: 12px; margin: 0px; color: var(--rz-secondary-light); margin-top: 15px"></RadzenHeading>
                        </div>
                    </div>
                </RadzenCard>
            </div>
        </div>
        <RadzenCard>
            <RadzenDataList WrapItems="true" AllowPaging="true" Data="@allWallets" TItem="WalletDto" PageSize="10" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true">
                <Template Context="wallet">
                    <RadzenCard Style="width: 100%; padding: 0; overflow: hidden;">
                        <div class="container">
                            <div class="row" style="margin-left: calc(var(--bs-gutter-x) * -1); margin-right: calc(var(--bs-gutter-x) * -1)">
                                <div class="col-lg-2 p-3">
                                    <RadzenButton Click="@(() => NavManager.NavigateTo($"/{wallet.Wallet}", true))" Text="View Activity" Class="w-100"/>
                                </div>
                                <div class="col-lg-7 p-3">
                                    <div class="row d-flex">
                                        <div class="col-md-8 col-lg-8">
                                            <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">Wallet</RadzenText>
                                            <RadzenText TextStyle="TextStyle.Body2" class="mb-sm-2 mb-lg-0">@(wallet.Wallet)</RadzenText>
                                        </div>
                                        <div class="col-md-4 col-lg-4">
                                            <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="mb-0">24h Activity</RadzenText>
                                            <RadzenText TextStyle="TextStyle.Body2" class="mb-sm-2 mb-lg-0">@(wallet.RecentTokenDelta) %</RadzenText>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-3 p-3">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-twitter" viewBox="0 0 16 16">
                                                                <path d="M5.026 15c6.038 0 9.341-5.003 9.341-9.334 0-.14 0-.282-.006-.422A6.685 6.685 0 0 0 16 3.542a6.658 6.658 0 0 1-1.889.518 3.301 3.301 0 0 0 1.447-1.817 6.533 6.533 0 0 1-2.087.793A3.286 3.286 0 0 0 7.875 6.03a9.325 9.325 0 0 1-6.767-3.429 3.289 3.289 0 0 0 1.018 4.382A3.323 3.323 0 0 1 .64 6.575v.045a3.288 3.288 0 0 0 2.632 3.218 3.203 3.203 0 0 1-.865.115 3.23 3.23 0 0 1-.614-.057 3.283 3.283 0 0 0 3.067 2.277A6.588 6.588 0 0 1 .78 13.58a6.32 6.32 0 0 1-.78-.045A9.344 9.344 0 0 0 5.026 15z"/>
                                                            </svg>
                                    <RadzenLink Path="@($"https://twitter.com/{wallet?.TwitterHandle}")" Text="@(wallet.TwitterHandle)" Target="_blank"></RadzenLink>
                                </div>
                            </div>
                        </div>
                    </RadzenCard>
                </Template>
            </RadzenDataList>
        </RadzenCard>
    }
    else
    {
        <RadzenCard Class="m-3">
            <div class="d-flex flex-row p-3">
                <RadzenBreadCrumb>
                    <RadzenBreadCrumbItem Path="/" Text="Back (overview)"/>
                </RadzenBreadCrumb>
            </div>
            <div class="d-flex flex-row p-3">
                <RadzenImage Path="images/avatar.png" Class="rounded-circle float-start me-3" Style="width: 100px; height: 100px;"/>
                <div>
                    <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-1 mb-0">User</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-twitter" viewBox="0 0 16 16">
                            <path d="M5.026 15c6.038 0 9.341-5.003 9.341-9.334 0-.14 0-.282-.006-.422A6.685 6.685 0 0 0 16 3.542a6.658 6.658 0 0 1-1.889.518 3.301 3.301 0 0 0 1.447-1.817 6.533 6.533 0 0 1-2.087.793A3.286 3.286 0 0 0 7.875 6.03a9.325 9.325 0 0 1-6.767-3.429 3.289 3.289 0 0 0 1.018 4.382A3.323 3.323 0 0 1 .64 6.575v.045a3.288 3.288 0 0 0 2.632 3.218 3.203 3.203 0 0 1-.865.115 3.23 3.23 0 0 1-.614-.057 3.283 3.283 0 0 0 3.067 2.277A6.588 6.588 0 0 1 .78 13.58a6.32 6.32 0 0 1-.78-.045A9.344 9.344 0 0 0 5.026 15z"/>
                        </svg> <b>@(walletDto?.TwitterHandle)</b>
                    </RadzenText>
                </div>
            </div>
            <RadzenCard Class="my-3 rz-background-color-primary-lighter rz-shadow-0 rz-border-radius-0" style="margin: 0 calc(-1 * var(--rz-card-padding)); padding: 2rem;">
                <RadzenText TextStyle="TextStyle.H6" Class="rz-color-primary-light">
                    <RadzenText TextStyle="TextStyle.Overline" Class="rz-color-primary-light d-flex mt-3 mb-0">
                        <RadzenIcon Icon="schedule" Style="width: 20px; height: 20px; font-size: 20px; position: relative; top: -4px; left: -4px; color: var(--rz-secondary-light)"></RadzenIcon>
                        Wallet at @(currentWalletLatestSnapshot)
                    </RadzenText>
                </RadzenText>
                <div class="row">
                    @if (isLoading)
                    {
                        <RadzenCard>
                            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Loading....</RadzenText>
                            <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate"/>
                        </RadzenCard>
                    }
                    else
                    {
                        <div class="col-md-4">
                            <RadzenText TextStyle="TextStyle.Overline" Class="rz-color-primary-light d-flex mt-3 mb-0">SOL</RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1">
                                <b>@(SolanaHelpers.ConvertToSol(tokenOverview?.Lamports))</b>
                            </RadzenText>
                            <RadzenText TextStyle="TextStyle.Overline" Class="rz-color-primary-light d-flex mt-3 mb-0">Tokens</RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1">
                                <b>@(tokenOverview?.Tokens.Count())</b>
                            </RadzenText>
                        </div>
                        <div class="col-md-8">
                            <RadzenText TextStyle="TextStyle.Overline" Class="rz-color-primary-light d-flex mt-3 mb-0">Wallet</RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1">
                                <b>@(walletDto?.Wallet)</b>
                            </RadzenText>
                            <RadzenText TextStyle="TextStyle.Overline" Class="rz-color-primary-light d-flex mt-3 mb-0">24h Activity</RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1">
                                <b>@(walletDto?.RecentTokenDelta) %</b>
                            </RadzenText>
                        </div>
                    }
                </div>
            </RadzenCard>
        </RadzenCard>

        <div class="row">
            <div class="col-sm-6 my-5">
                @if (isLoading)
                {
                    <RadzenCard>
                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Loading....</RadzenText>
                        <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate"/>
                    </RadzenCard>
                }
                else
                {
                    <RadzenChart>
                        <RadzenLineSeries Smooth="true" Data="@solLineChartDatas" CategoryProperty="Date" Title="" ValueProperty="Value">
                            <RadzenMarkers MarkerType="MarkerType.Circle"/>
                            <RadzenSeriesDataLabels Visible="false"/>
                        </RadzenLineSeries>
                        <RadzenCategoryAxis Padding="20" Formatter="@FormatAsDay"/>
                        <RadzenValueAxis>
                            <RadzenGridLines Visible="false"/>
                            <RadzenAxisTitle Text="SOL"/>
                        </RadzenValueAxis>
                    </RadzenChart>
                }
            </div>
            <div class="col-sm-6 my-5">
                @if (isLoading)
                {
                    <RadzenCard>
                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Loading....</RadzenText>
                        <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate"/>
                    </RadzenCard>
                }
                else
                {
                    <RadzenChart>
                        <RadzenLineSeries Smooth="true" Data="@tokenLineChartDatas" CategoryProperty="Date" Title="" ValueProperty="Value">
                            <RadzenMarkers MarkerType="MarkerType.Circle"/>
                            <RadzenSeriesDataLabels Visible="false"/>
                        </RadzenLineSeries>
                        <RadzenCategoryAxis Padding="20" Formatter="@FormatAsDay"/>
                        <RadzenValueAxis>
                            <RadzenGridLines Visible="false"/>
                            <RadzenAxisTitle Text="Tokens"/>
                        </RadzenValueAxis>
                    </RadzenChart>
                }

            </div>
        </div>

        <div class="row">
            <div class="col-sm-6 my-5">
                @if (isLoading)
                {
                    <RadzenCard>
                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Loading....</RadzenText>
                        <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate"/>
                    </RadzenCard>
                }
                else
                {
                    <RadzenText TextStyle="TextStyle.H4" TagName="TagName.H4" class="mb-0">Wallet Inventory</RadzenText>
                    <RadzenDataList WrapItems="true" AllowPaging="false" Data="@tokenCollections" TItem="TokenCollection">
                        <Template Context="collection">
                            @* <RadzenCard Style="width:300px; cursor: pointer" @onclick="@(e => OnCollectionClick(e, collection.Name))"> *@
                            <RadzenCard Style="width:300px; cursor: pointer" @onclick="@(e => ShowInlineDialog(collection.Name))">
                                <div class="d-flex flex-row align-items-center">
                                    <RadzenImage Path="@collection.ImageUrl" Class="rounded-circle float-start me-3" Style="width: 80px; height: 80px;"/>
                                    <div>
                                        <h4 class="mb-0">@collection.Name</h4>
                                        <div>Count: @collection.Count</div>
                                        @* <div style="font-size: .8em">Mint: @token.Mint</div> *@
                                    </div>
                                </div>
                                <hr style="border: none; background-color: rgba(0,0,0,.08); height: 1px; margin: 1rem 0;"/>
                            </RadzenCard>
                        </Template>
                    </RadzenDataList>
                }
            </div>
            <div class="col-sm-6 my-5">
                @if (isLoading)
                {
                    <RadzenCard>
                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Loading....</RadzenText>
                        <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate"/>
                    </RadzenCard>
                }
                else
                {
                    <RadzenText TextStyle="TextStyle.H4" TagName="TagName.H4" Style="margin-top: 9px!important;" class="mb-0">Activity log - past 24hrs</RadzenText>
                    if (!dailyActivities.IsNullOrEmpty())
                    {
                        <RadzenCard>
                            @foreach (var activity in dailyActivities)
                            {
                                if (activity.ActivityType == ActivityType.Added)
                                {
                                    <RadzenText TextStyle="TextStyle.Body1">
                                        <b>@activity.Date.ToString("yyyy-MM-dd")</b>
                                        <span class="rz-color-success-dark">@activity.ActivityType.ToString()</span>
                                        @activity.Name
                                    </RadzenText>
                                }
                                else
                                {
                                    <RadzenText TextStyle="TextStyle.Body1">
                                        <b>@activity.Date.ToString("yyyy-MM-dd")</b>
                                        <span class="rz-color-danger-dark">@activity.ActivityType.ToString()</span>
                                        @activity.Name
                                    </RadzenText>
                                }
                            }
                        </RadzenCard>
                    }
                    else
                    {
                        <RadzenCard>
                            <b>No relevant action</b>
                        </RadzenCard>
                    }
                }
            </div>
        </div>
    }
}

<style>
.rz-legend {
    display: none !important;
}              
</style>

@code {

    async Task ShowInlineDialog(string collectionName)
    {
        var collectionLineChartDatas = LoadCollectionChart(collectionName);
        var collectionItems = tokenOverview.Tokens.Where(_ => _.Symbol == collectionName);

        await DialogService.OpenAsync("Overview", ds =>
            @<div>
                <p class="mb-4">Collection: <b>@collectionName</b></p>
                <RadzenChart>
                    <RadzenLineSeries Smooth="true" Data="@collectionLineChartDatas" CategoryProperty="Date" Title="" ValueProperty="Value">
                        <RadzenMarkers MarkerType="MarkerType.Circle"/>
                        <RadzenSeriesDataLabels Visible="false"/>
                    </RadzenLineSeries>
                    <RadzenCategoryAxis Padding="20" Formatter="@FormatAsDay"/>
                    <RadzenValueAxis>
                        <RadzenGridLines Visible="false"/>
                        <RadzenAxisTitle Text="Count"/>
                    </RadzenValueAxis>
                </RadzenChart>
                <div class="row">
                    <div class="col">
                        <div class="row">
                            @foreach (var item in collectionItems)
                            {
                                <div class="col col-3">
                                    <RadzenCard Style="margin-bottom: 20px">
                                        <RadzenImage Path="@item.ImageUrl" Class="float-start me-3" Style="width: 60px; height: 60px;"/>
                                        <small>
                                            <RadzenLink Path="@($"https://solscan.io/token/{item?.Mint}")" Text="@item.Name" Target="_blank"></RadzenLink>
                                        </small>
                                    </RadzenCard>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>);
    }

}